---
-   name: Set root password # task 1
    user: # this is an ansible module
        name: root
        password: "{{ root_password }}"

-   name: Update apt-cache and upgrade # task 2
    apt: # this is an ansible module
        force_apt_get: yes
        update_cache: "True"
        cache_valid_time: 3600
        upgrade: yes

-   name: Install packages
    apt:
        force_apt_get: yes
        name: "{{ packages }}"

-   name: Copy unattended upgrades 10 settings
    copy:
        src: files/apt_periodic
        dest: /etc/apt/apt.conf.d/10periodic

-   name: Copy unattended upgrades 50 settings
    copy:
        src: files/apt_periodic_50
        dest: /etc/apt/apt.conf.d/50unattended-upgrades

-   name: Create user
    user:
        name: "{{ server_user }}"
        password: "{{ server_user_pass }}"
        state: present
        shell: /bin/bash
        groups: "{{ server_user_groups }}"

-   name: Add ssh-key for new user
    authorized_key:
        user: "{{ server_user }}"
        state: present
        key: "{{ lookup('file', item) }}"
    with_items: "{{ pub_ssh_key_location }}"

-   name: Disallow root ssh access
    lineinfile:  # Path to the file sshd_config is on the VM of devops i.e. loadBalancer, appServer, and database
        path: /etc/ssh/sshd_config
        regex: "^PermitRootLogin"
        line: "PermitRootLogin no"
        state: present
    notify:
        - restart ssh

-   name: Disallow root ssh access
    lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication no"
        state: present
    notify:
        - restart ssh

-   meta: flush_handlers

-   name: Add user to sudoers
    lineinfile:
        dest: /etc/sudoers
        regexp: "{{ server_user }} ALL"
        line: "{{ server_user }} ALL=(ALL) NOPASSWD:ALL"
        state: present

-   name: Only allow user to ssh
    lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^AllowUsers"
        line: "AllowUsers {{ server_user }}"
        state: present
    ignore_errors: yes

-   name: Remove default user
    remote_user: "{{ server_user }}"
    user:
        name: azureuser
        state: absent
        force: yes
        remove: yes